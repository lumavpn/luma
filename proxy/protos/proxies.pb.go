// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        (unknown)
// source: proxies.proto

package protos

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Protocol int32

const (
	Protocol_PROTOCOL_UNSET Protocol = 0
	Protocol_HTTP           Protocol = 1
	Protocol_HTTPS          Protocol = 2
	Protocol_INNER          Protocol = 3
	Protocol_SOCKS4         Protocol = 4
	Protocol_SOCKS5         Protocol = 5
	Protocol_TUN            Protocol = 6
)

// Enum value maps for Protocol.
var (
	Protocol_name = map[int32]string{
		0: "PROTOCOL_UNSET",
		1: "HTTP",
		2: "HTTPS",
		3: "INNER",
		4: "SOCKS4",
		5: "SOCKS5",
		6: "TUN",
	}
	Protocol_value = map[string]int32{
		"PROTOCOL_UNSET": 0,
		"HTTP":           1,
		"HTTPS":          2,
		"INNER":          3,
		"SOCKS4":         4,
		"SOCKS5":         5,
		"TUN":            6,
	}
)

func (x Protocol) Enum() *Protocol {
	p := new(Protocol)
	*p = x
	return p
}

func (x Protocol) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Protocol) Descriptor() protoreflect.EnumDescriptor {
	return file_proxies_proto_enumTypes[0].Descriptor()
}

func (Protocol) Type() protoreflect.EnumType {
	return &file_proxies_proto_enumTypes[0]
}

func (x Protocol) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Protocol.Descriptor instead.
func (Protocol) EnumDescriptor() ([]byte, []int) {
	return file_proxies_proto_rawDescGZIP(), []int{0}
}

type AdapterType int32

const (
	AdapterType_AdapterType_Unset AdapterType = 0
	AdapterType_Direct            AdapterType = 1
	AdapterType_Reject            AdapterType = 2
	AdapterType_RejectDrop        AdapterType = 3
	AdapterType_Compatible        AdapterType = 4
	AdapterType_Pass              AdapterType = 5
	AdapterType_Dns               AdapterType = 6
	AdapterType_Relay             AdapterType = 7
	AdapterType_Selector          AdapterType = 8
	AdapterType_Fallback          AdapterType = 9
	AdapterType_URLTest           AdapterType = 10
	AdapterType_LoadBalance       AdapterType = 11
	AdapterType_Shadowsocks       AdapterType = 12
	AdapterType_ShadowsocksR      AdapterType = 13
	AdapterType_Snell             AdapterType = 14
	AdapterType_Socks5            AdapterType = 15
	AdapterType_Http              AdapterType = 16
	AdapterType_Vmess             AdapterType = 17
	AdapterType_Vless             AdapterType = 18
	AdapterType_Trojan            AdapterType = 19
	AdapterType_Hysteria          AdapterType = 20
	AdapterType_Hysteria2         AdapterType = 21
	AdapterType_Wireguard         AdapterType = 22
	AdapterType_Tuic              AdapterType = 23
	AdapterType_Ssh               AdapterType = 24
)

// Enum value maps for AdapterType.
var (
	AdapterType_name = map[int32]string{
		0:  "AdapterType_Unset",
		1:  "Direct",
		2:  "Reject",
		3:  "RejectDrop",
		4:  "Compatible",
		5:  "Pass",
		6:  "Dns",
		7:  "Relay",
		8:  "Selector",
		9:  "Fallback",
		10: "URLTest",
		11: "LoadBalance",
		12: "Shadowsocks",
		13: "ShadowsocksR",
		14: "Snell",
		15: "Socks5",
		16: "Http",
		17: "Vmess",
		18: "Vless",
		19: "Trojan",
		20: "Hysteria",
		21: "Hysteria2",
		22: "Wireguard",
		23: "Tuic",
		24: "Ssh",
	}
	AdapterType_value = map[string]int32{
		"AdapterType_Unset": 0,
		"Direct":            1,
		"Reject":            2,
		"RejectDrop":        3,
		"Compatible":        4,
		"Pass":              5,
		"Dns":               6,
		"Relay":             7,
		"Selector":          8,
		"Fallback":          9,
		"URLTest":           10,
		"LoadBalance":       11,
		"Shadowsocks":       12,
		"ShadowsocksR":      13,
		"Snell":             14,
		"Socks5":            15,
		"Http":              16,
		"Vmess":             17,
		"Vless":             18,
		"Trojan":            19,
		"Hysteria":          20,
		"Hysteria2":         21,
		"Wireguard":         22,
		"Tuic":              23,
		"Ssh":               24,
	}
)

func (x AdapterType) Enum() *AdapterType {
	p := new(AdapterType)
	*p = x
	return p
}

func (x AdapterType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AdapterType) Descriptor() protoreflect.EnumDescriptor {
	return file_proxies_proto_enumTypes[1].Descriptor()
}

func (AdapterType) Type() protoreflect.EnumType {
	return &file_proxies_proto_enumTypes[1]
}

func (x AdapterType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AdapterType.Descriptor instead.
func (AdapterType) EnumDescriptor() ([]byte, []int) {
	return file_proxies_proto_rawDescGZIP(), []int{1}
}

var File_proxies_proto protoreflect.FileDescriptor

var file_proxies_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x70, 0x72, 0x6f, 0x78, 0x69, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2a,
	0x5f, 0x0a, 0x08, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x12, 0x12, 0x0a, 0x0e, 0x50,
	0x52, 0x4f, 0x54, 0x4f, 0x43, 0x4f, 0x4c, 0x5f, 0x55, 0x4e, 0x53, 0x45, 0x54, 0x10, 0x00, 0x12,
	0x08, 0x0a, 0x04, 0x48, 0x54, 0x54, 0x50, 0x10, 0x01, 0x12, 0x09, 0x0a, 0x05, 0x48, 0x54, 0x54,
	0x50, 0x53, 0x10, 0x02, 0x12, 0x09, 0x0a, 0x05, 0x49, 0x4e, 0x4e, 0x45, 0x52, 0x10, 0x03, 0x12,
	0x0a, 0x0a, 0x06, 0x53, 0x4f, 0x43, 0x4b, 0x53, 0x34, 0x10, 0x04, 0x12, 0x0a, 0x0a, 0x06, 0x53,
	0x4f, 0x43, 0x4b, 0x53, 0x35, 0x10, 0x05, 0x12, 0x07, 0x0a, 0x03, 0x54, 0x55, 0x4e, 0x10, 0x06,
	0x2a, 0xd9, 0x02, 0x0a, 0x0b, 0x41, 0x64, 0x61, 0x70, 0x74, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x15, 0x0a, 0x11, 0x41, 0x64, 0x61, 0x70, 0x74, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x5f,
	0x55, 0x6e, 0x73, 0x65, 0x74, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x44, 0x69, 0x72, 0x65, 0x63,
	0x74, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x52, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x10, 0x02, 0x12,
	0x0e, 0x0a, 0x0a, 0x52, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x44, 0x72, 0x6f, 0x70, 0x10, 0x03, 0x12,
	0x0e, 0x0a, 0x0a, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x74, 0x69, 0x62, 0x6c, 0x65, 0x10, 0x04, 0x12,
	0x08, 0x0a, 0x04, 0x50, 0x61, 0x73, 0x73, 0x10, 0x05, 0x12, 0x07, 0x0a, 0x03, 0x44, 0x6e, 0x73,
	0x10, 0x06, 0x12, 0x09, 0x0a, 0x05, 0x52, 0x65, 0x6c, 0x61, 0x79, 0x10, 0x07, 0x12, 0x0c, 0x0a,
	0x08, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x10, 0x08, 0x12, 0x0c, 0x0a, 0x08, 0x46,
	0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x10, 0x09, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x52, 0x4c,
	0x54, 0x65, 0x73, 0x74, 0x10, 0x0a, 0x12, 0x0f, 0x0a, 0x0b, 0x4c, 0x6f, 0x61, 0x64, 0x42, 0x61,
	0x6c, 0x61, 0x6e, 0x63, 0x65, 0x10, 0x0b, 0x12, 0x0f, 0x0a, 0x0b, 0x53, 0x68, 0x61, 0x64, 0x6f,
	0x77, 0x73, 0x6f, 0x63, 0x6b, 0x73, 0x10, 0x0c, 0x12, 0x10, 0x0a, 0x0c, 0x53, 0x68, 0x61, 0x64,
	0x6f, 0x77, 0x73, 0x6f, 0x63, 0x6b, 0x73, 0x52, 0x10, 0x0d, 0x12, 0x09, 0x0a, 0x05, 0x53, 0x6e,
	0x65, 0x6c, 0x6c, 0x10, 0x0e, 0x12, 0x0a, 0x0a, 0x06, 0x53, 0x6f, 0x63, 0x6b, 0x73, 0x35, 0x10,
	0x0f, 0x12, 0x08, 0x0a, 0x04, 0x48, 0x74, 0x74, 0x70, 0x10, 0x10, 0x12, 0x09, 0x0a, 0x05, 0x56,
	0x6d, 0x65, 0x73, 0x73, 0x10, 0x11, 0x12, 0x09, 0x0a, 0x05, 0x56, 0x6c, 0x65, 0x73, 0x73, 0x10,
	0x12, 0x12, 0x0a, 0x0a, 0x06, 0x54, 0x72, 0x6f, 0x6a, 0x61, 0x6e, 0x10, 0x13, 0x12, 0x0c, 0x0a,
	0x08, 0x48, 0x79, 0x73, 0x74, 0x65, 0x72, 0x69, 0x61, 0x10, 0x14, 0x12, 0x0d, 0x0a, 0x09, 0x48,
	0x79, 0x73, 0x74, 0x65, 0x72, 0x69, 0x61, 0x32, 0x10, 0x15, 0x12, 0x0d, 0x0a, 0x09, 0x57, 0x69,
	0x72, 0x65, 0x67, 0x75, 0x61, 0x72, 0x64, 0x10, 0x16, 0x12, 0x08, 0x0a, 0x04, 0x54, 0x75, 0x69,
	0x63, 0x10, 0x17, 0x12, 0x07, 0x0a, 0x03, 0x53, 0x73, 0x68, 0x10, 0x18, 0x42, 0x26, 0x5a, 0x24,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6c, 0x75, 0x6d, 0x61, 0x76,
	0x70, 0x6e, 0x2f, 0x6c, 0x75, 0x6d, 0x61, 0x2f, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proxies_proto_rawDescOnce sync.Once
	file_proxies_proto_rawDescData = file_proxies_proto_rawDesc
)

func file_proxies_proto_rawDescGZIP() []byte {
	file_proxies_proto_rawDescOnce.Do(func() {
		file_proxies_proto_rawDescData = protoimpl.X.CompressGZIP(file_proxies_proto_rawDescData)
	})
	return file_proxies_proto_rawDescData
}

var file_proxies_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_proxies_proto_goTypes = []any{
	(Protocol)(0),    // 0: Protocol
	(AdapterType)(0), // 1: AdapterType
}
var file_proxies_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_proxies_proto_init() }
func file_proxies_proto_init() {
	if File_proxies_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proxies_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   0,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_proxies_proto_goTypes,
		DependencyIndexes: file_proxies_proto_depIdxs,
		EnumInfos:         file_proxies_proto_enumTypes,
	}.Build()
	File_proxies_proto = out.File
	file_proxies_proto_rawDesc = nil
	file_proxies_proto_goTypes = nil
	file_proxies_proto_depIdxs = nil
}
